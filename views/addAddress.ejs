<!-- include header -->
<%- include('include/header') %>
<!-- /include header -->
<section class="interactive-section">
  <div class="container py-5">
    <div class="row">
      <!-- Logout Button (Right Side Top) -->
      <div class="col text-end mb-4">
        <form action="/logout">
          <button type="submit" class="btn btn-dark" id="logoutButton">Logout</button>
        </form>
      </div>
    </div>

    <div class="row">
      <!-- Left Side Content -->
      <div class="col-lg-4">
        <!-- Address Details -->
        <div class="card mb-4">
          <div class="card-body text-center">
            <h5 class="my-3" style="color:black;">Account Details</h5>
            <div class="d-flex justify-content-center mb-2">
              <!-- Add Address Link -->
              <button id="addAddressLink" class="btn btn-link" style="text-decoration:none; background-color: black; color: white;" onclick="redirectToAddress()">Profile</button>
            </div>
          </div>
        </div>

        <!-- My Orders Link -->
        <div class="card mb-4">
          <div class="card-body text-center">
            <h5 class="my-3">Your Orders</h5>
            <div class="d-flex justify-content-center mb-2">
              <!-- My Orders Link -->
              <a href="/order">
                <button class="btn btn-warning" style="font-weight: 500;">My Orders</button>
              </a>
            </div>
          </div>
        </div>

        <!-- Wallet Details -->
        <div class="card mb-4">
          <div class="card-body text-center">
            <h5 class="my-3">Your Wallet</h5>
            <!-- Add your logic to display wallet details (Credit Card, Balance, etc.) -->
            <div class="credit-card">
              <!-- Your wallet content goes here -->
            </div>
          </div>
        </div>
      </div>

      <!-- Address Form -->
      <div class="col-lg-8">
        <div class="card mb-4">
          <div class="card-body">
            <h5 class="mb-4">Add Details</h5>
            <form action="/add-address" id="addAddressForm" method="post">
              <!-- Full Name -->
              <div class="mb-3">
                <label for="fullName" class="form-label">Full Name</label>
                <input type="text" class="form-control" id="fullName" name="fullName" >
              </div>
              <p class="errorP <%= !errorfullName ? 'd-none' : '' %>"><%= errorfullName %></p>
              <p class="errorP <%= !minFullName ? 'd-none' : '' %>"><%= minFullName %></p>

              <!-- Address -->
              <div class="mb-3">
                <label for="addressLine1" class="form-label">Address</label>
                <input type="text" class="form-control" id="addressLine1" name="address" >
              </div>
              <p class="errorP <%= !errorAddress ? 'd-none' : '' %>"><%= errorAddress %></p>
              <p class="errorP <%= !addressRegex ? 'd-none' : '' %>"><%= addressRegex %></p>
              <!-- City -->
              <div class="mb-3">
                <label for="city" class="form-label">City</label>
                <input type="text" class="form-control" id="city" name="city" >
              </div>
              <p class="errorP <%= !errorCity ? 'd-none' : '' %>"><%= errorCity %></p>
              <p class="errorP <%= !cityRegex ? 'd-none' : '' %>"><%= cityRegex %></p>

              <!-- house no -->
              <div class="mb-3">
                <label for="houseNo" class="form-label">House No</label>
                <input type="text" class="form-control" id="houseNo" name="houseNo" >
              </div>
              <p class="errorP <%= !errorHouseNo ? 'd-none' : '' %>"><%= errorHouseNo %></p>
              <p class="errorP <%= !houseNoRegex ? 'd-none' : '' %>"><%= houseNoRegex %></p>

              <!-- State -->
              <div class="mb-3">
                <label for="state" class="form-label">State</label>
                <input type="text" class="form-control" id="state" name="state" >
              </div>
              <p class="errorP <%= !errorState ? 'd-none' : '' %>"><%= errorState %></p>
              <p class="errorP <%= !stateRegex ? 'd-none' : '' %>"><%= stateRegex %></p>

              <!-- Zip Code -->
              <div class="mb-3">
                <label for="zipCode" class="form-label">Zip Code</label>
                <input type="text" class="form-control" id="zipCode" name="zipCode" >
              </div>
              <p class="errorP <%= !errorZipCode ? 'd-none' : '' %>"><%= errorZipCode %></p>
              <p class="errorP <%= !zipCodeRegex ? 'd-none' : '' %>"><%= zipCodeRegex %></p>

              <!-- Country -->
              <div class="mb-3">
                <label for="country" class="form-label">Country</label>
                <input type="text" class="form-control" id="country" name="country" >
              </div>
              <p class="errorP <%= !errorCountry ? 'd-none' : '' %>"><%= errorCountry %></p>
              <p class="errorP <%= !countryRegex ? 'd-none' : '' %>"><%= countryRegex %></p>

              <!-- mobile -->
              <div class="mb-3">
                <label for="mobile" class="form-label">mobile</label>
                <input type="text" class="form-control" id="mobile" name="mobile" >
              </div>
              <p class="errorP <%= !errorMobile ? 'd-none' : '' %>"><%= errorMobile %></p>
              <p class="errorP <%= !mobileRegex ? 'd-none' : '' %>"><%= mobileRegex %></p>


              <p class="errorP <%= !errorAddressExists ? 'd-none' : '' %>"><%= errorAddressExists %></p>
              <!-- Submit Button -->
              <button type="submit" class="btn btn-primary">Add Address</button>
              <div id="errorData" data-errors=""></div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@latest"></script>

<script>
  function redirectToAddress() {
    // Implement redirection logic here, for example:
    window.location.href = "/account-details";
  }
  document.getElementById('addAddressForm').addEventListener('submit', function(event) {
    // Prevent form submission initially
    event.preventDefault();

    // Form fields
    const fullName = document.getElementById('fullName').value.trim();
    const address = document.getElementById('addressLine1').value.trim();
    const city = document.getElementById('city').value.trim();
    const state = document.getElementById('state').value.trim();
    const zipCode = document.getElementById('zipCode').value.trim();
    const country = document.getElementById('country').value.trim();
    const houseNo = document.getElementById('houseNo').value.trim();
    const mobile = document.getElementById('mobile').value.trim();

    // Error flag
    let hasErrors = false;

    // Regular expressions for validation
    const fullNameRegex = /^[A-Za-z\s]{3,30}$/;
    const addressRegex = /^.{5,}$/; // Allowing any characters, minimum length 5
    const cityRegex = /^[A-Za-z\s]+$/;
    const stateRegex = /^[A-Za-z\s]+$/;
    const zipCodeRegex = /^\d{6}$/; // US Zip Code with 5 digits
    const countryRegex = /^[A-Za-z\s]+$/;
    const houseNoRegex = /^[A-Za-z0-9\s]+$/; // Allowing alphanumeric and spaces
    const mobileRegex = /^\d{10}$/; // Assuming mobile is a 10 digit number

    // Full name validation
    if (!fullNameRegex.test(fullName)) {
        Swal.fire('Error', 'Full name should be between 3 and 30 characters and contain only letters and spaces!', 'error');
        hasErrors = true;
    }

    // Address validation
    if (!addressRegex.test(address)) {
        Swal.fire('Error', 'Address must be at least 5 characters long!', 'error');
        hasErrors = true;
    }

    // City validation
    if (!cityRegex.test(city)) {
        Swal.fire('Error', 'City should contain only letters and spaces!', 'error');
        hasErrors = true;
    }

    // State validation
    if (!stateRegex.test(state)) {
        Swal.fire('Error', 'State should contain only letters and spaces!', 'error');
        hasErrors = true;
    }

    // Zip code validation
    if (!zipCodeRegex.test(zipCode)) {
        Swal.fire('Error', 'Zip code should be exactly 6 digits long!', 'error');
        hasErrors = true;
    }

    // Country validation
    if (!countryRegex.test(country)) {
        Swal.fire('Error', 'Country should contain only letters and spaces!', 'error');
        hasErrors = true;
    }

    // House No validation
    if (!houseNoRegex.test(houseNo)) {
        Swal.fire('Error', 'House number should contain only letters, numbers, and spaces!', 'error');
        hasErrors = true;
    }

    // Mobile validation
    if (!mobileRegex.test(mobile)) {
        Swal.fire('Error', 'Mobile number should be exactly 10 digits long!', 'error');
        hasErrors = true;
    }
 // If no errors, proceed with submission
 if (!hasErrors) {
        // Show a success message
        Swal.fire({
            icon: 'success',
            title: 'Success',
            text: 'Address added successfully!',
            showConfirmButton: true
        }).then(() => {
            // Once the alert is confirmed, submit the form
            event.target.submit();
        });
    }
});

</script>


<!-- include footer -->
<%- include('include/footer') %>
<!-- /include footer -->
